[
    {
        "id": "afe326f672e3cd97",
        "type": "subflow",
        "name": "50five (subflow)",
        "info": "## About this subflow\n\nThis subflow will control 50five (fka. Shell Recharge or Newmotion) car charging equipment. It's loosly based on the Shell Recharge script from dgthomson.\n\n## Getting started\n\nDrag the 50five node into a flow.\n\nDouble-click on the new node.\n\nUsing the credentials used to login to the 50five website, enter the username and password into the respective fields of the `Edit subflow instance: <xxx>` box which appears.\n\n## Inputs\n\n> msg.payload = { \"action\": \"_ACTION_\" }\n\n...where _ACTION_ is:\n\n**start** and **stop**\n\nStart or stop a charging session.\n\n> msg.payload = { \"action\": \"start\"}\n\n**reset**\n\nReset the charging equipment.\n\n**poll**\n\nPoll the charging equipment once for status information: this gives details directly from 50five like _'Charging'_ and _'Occupied'_. \n\n> msg.payload = { \"action\": \"poll\" }\n\n## Outputs\n\nThe **_Output_** payload contains the status of the charger.\n\n## Contact\n\nvia [Github](https://github.com/nikagl/50five)\n\n## Thanks\n\nThanks to dgthomson for his shell recharge script!! [Github](https://github.com/dgthomson/nodered-shellrecharge)",
        "category": "",
        "in": [
            {
                "x": 20,
                "y": 380,
                "wires": [
                    {
                        "id": "ab42827aa9a16541"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 840,
                "wires": [
                    {
                        "id": "ad396f2bbd1d09ee",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "username",
                "type": "str",
                "value": "wilbert.van.vilsteren@achmea.nl",
                "ui": {
                    "icon": "font-awesome/fa-user-circle-o",
                    "label": {
                        "en-US": "Username"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "password",
                "type": "cred",
                "ui": {
                    "icon": "font-awesome/fa-unlock-alt",
                    "label": {
                        "en-US": "Password"
                    }
                }
            },
            {
                "name": "url",
                "type": "str",
                "value": "https://50five-snl.evc-net.com",
                "ui": {
                    "label": {
                        "en-US": "50five URL"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {
            "module": "50five",
            "type": "dgt.nodered.35e.shellrecharge",
            "version": "0.0.3 (2025-07-27)",
            "author": "Nika Gerson Lohman <nikagl@gmail.com>",
            "desc": "Nodered subflow to control 50five charging equipment.",
            "keywords": "shell,recharge,shell recharge,new,motion,newmotion,evse,charge,50five",
            "license": "GPL-3.0"
        },
        "color": "#0097A9",
        "icon": "font-awesome/fa-plug"
    },
    {
        "id": "e4121540cef0577a",
        "type": "http request",
        "z": "afe326f672e3cd97",
        "name": "Start Charging",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 680,
        "wires": [
            [
                "1ef4895ee617902f",
                "e212968823cdeec7"
            ]
        ]
    },
    {
        "id": "166efce0dcca4c03",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Build URL Start Charging",
        "func": "var deviceid = flow.get('deviceid') || msg.deviceid;\nvar userid = flow.get('userid') || msg.userid;\nvar cardid = flow.get('cardid') || msg.cardid;\nvar channelid = flow.get('channelid') || msg.channelid;\n\nvar baseUrl = env.get('url');\nmsg.url = baseUrl + '/api/ajax?requests=%7B%220%22%3A%7B%22handler%22%3A%22%5C%5CLMS%5C%5CEV%5C%5CAsyncServices%5C%5CRechargeSpotsAsyncService%22%2C%22method%22%3A%22action%22%2C%22params%22%3A%7B%22action%22%3A%22StartTransaction%22%2C%22rechargeSpotId%22%3A%22' + deviceid + '%22%2C%22clickedButtonId%22%3A0%2C%22channel%22%3A%22' + channelid + '%22%2C%22customer%22%3A%22' + userid + '%22%2C%22card%22%3A%22' + cardid + '%22%7D%7D%7D&metricKey=RechargeSpotDashboard_1021';\nmsg.method = \"POST\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 680,
        "wires": [
            [
                "e4121540cef0577a"
            ]
        ]
    },
    {
        "id": "37207b0ef9a04622",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Set Cookies Header",
        "func": "// Get cookies from flow context\nvar phpsessid = flow.get('PHPSESSID');\nvar serverid = flow.get('SERVERID');\nif (phpsessid && serverid) {\n    msg.headers = msg.headers || {};\n    msg.headers['Cookie'] = `PHPSESSID=${phpsessid}; SERVERID=${serverid}`;\n} else {\n    msg.headers = msg.headers || {};\n    msg.headers['Cookie'] = '';\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 460,
        "wires": [
            [
                "5543a7f6021292f4"
            ]
        ]
    },
    {
        "id": "523e092ea25df902",
        "type": "http request",
        "z": "afe326f672e3cd97",
        "name": "Get Device ID",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 820,
        "y": 460,
        "wires": [
            [
                "c2211e7d9f57648c"
            ]
        ]
    },
    {
        "id": "cd627a81c8fd2344",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Set Cookies Header",
        "func": "// Get cookies from flow context\nvar phpsessid = flow.get('PHPSESSID');\nvar serverid = flow.get('SERVERID');\nif (phpsessid && serverid) {\n    msg.headers = msg.headers || {};\n    msg.headers['Cookie'] = `PHPSESSID=${phpsessid}; SERVERID=${serverid}`;\n} else {\n    msg.headers = msg.headers || {};\n    msg.headers['Cookie'] = '';\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 500,
        "wires": [
            [
                "eefc7e230b8abd86"
            ]
        ]
    },
    {
        "id": "96df4155ded7d3b5",
        "type": "http request",
        "z": "afe326f672e3cd97",
        "name": "Get Channel ID",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 820,
        "y": 500,
        "wires": [
            [
                "9e8ce09005a03634"
            ]
        ]
    },
    {
        "id": "cc31ceaa6768b237",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Set Cookies Header",
        "func": "// Get cookies from flow context\nvar phpsessid = flow.get('PHPSESSID');\nvar serverid = flow.get('SERVERID');\nif (phpsessid && serverid) {\n    msg.headers = msg.headers || {};\n    msg.headers['Cookie'] = `PHPSESSID=${phpsessid}; SERVERID=${serverid}`;\n} else {\n    msg.headers = msg.headers || {};\n    msg.headers['Cookie'] = '';\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 540,
        "wires": [
            [
                "76f26faaa6b12c25"
            ]
        ]
    },
    {
        "id": "34a5d41c70f5ed7f",
        "type": "http request",
        "z": "afe326f672e3cd97",
        "name": "Get User ID",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 810,
        "y": 540,
        "wires": [
            [
                "2c39c72f658cb7dd"
            ]
        ]
    },
    {
        "id": "dd6f3222e79bcba5",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Set Cookies Header",
        "func": "// Get cookies from flow context\nvar phpsessid = flow.get('PHPSESSID');\nvar serverid = flow.get('SERVERID');\nif (phpsessid && serverid) {\n    msg.headers = msg.headers || {};\n    msg.headers['Cookie'] = `PHPSESSID=${phpsessid}; SERVERID=${serverid}`;\n} else {\n    msg.headers = msg.headers || {};\n    msg.headers['Cookie'] = '';\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 580,
        "wires": [
            [
                "c508ecef01e019d7"
            ]
        ]
    },
    {
        "id": "52dc6d748d6d338d",
        "type": "http request",
        "z": "afe326f672e3cd97",
        "name": "Get Card ID",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 810,
        "y": 580,
        "wires": [
            [
                "4c4d4bd16599e018"
            ]
        ]
    },
    {
        "id": "1dbd3ab606fed438",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Set Cookies Header",
        "func": "// Get cookies from flow context\nvar phpsessid = flow.get('PHPSESSID');\nvar serverid = flow.get('SERVERID');\nif (phpsessid && serverid) {\n    msg.headers = msg.headers || {};\n    msg.headers['Cookie'] = `PHPSESSID=${phpsessid}; SERVERID=${serverid}`;\n} else {\n    msg.headers = msg.headers || {};\n    msg.headers['Cookie'] = '';\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 620,
        "wires": [
            [
                "fda03362ccda5b6d",
                "e095d5d4bde9b040"
            ]
        ]
    },
    {
        "id": "f88bdcf8eaa8e2ce",
        "type": "http request",
        "z": "afe326f672e3cd97",
        "name": "Stop Charging",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 720,
        "wires": [
            [
                "1ef4895ee617902f",
                "651b0c71fc1625b4"
            ]
        ]
    },
    {
        "id": "026400c8cc57db02",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Extract Device ID",
        "func": "var payload = msg.payload;\n\n// If payload is a string, parse it\nif (typeof payload === \"string\") {\n    payload = JSON.parse(payload);\n}\n\nvar deviceid = payload[0][0].IDX;\n\nflow.set('deviceid', deviceid);\nmsg.deviceid = deviceid;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 460,
        "wires": [
            [
                "cd627a81c8fd2344"
            ]
        ]
    },
    {
        "id": "9e8ce09005a03634",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Extract Channel ID",
        "func": "var payload = msg.payload;\n\n// If payload is a string, parse it\nif (typeof payload === \"string\") {\n    payload = JSON.parse(payload);\n}\n\nvar channelid = payload[0][0].CHANNEL;\n\nflow.set('channelid', channelid);\nmsg.channelid = channelid;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 500,
        "wires": [
            [
                "cc31ceaa6768b237"
            ]
        ]
    },
    {
        "id": "2c39c72f658cb7dd",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Extract User ID",
        "func": "var payload = msg.payload;\n\n// If payload is a string, parse it\nif (typeof payload === \"string\") {\n    payload = JSON.parse(payload);\n}\n\nvar userid = payload[0][0].id;\n\nflow.set('userid', userid);\nmsg.userid = userid;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 540,
        "wires": [
            [
                "dd6f3222e79bcba5"
            ]
        ]
    },
    {
        "id": "4c4d4bd16599e018",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Extract Card ID",
        "func": "var payload = msg.payload;\n\n// If payload is a string, parse it\nif (typeof payload === \"string\") {\n    payload = JSON.parse(payload);\n}\n\n// Warning: in my case it's the second card, therefore [1]\nvar cardid = payload[0][0].id;\n\nflow.set('cardid', cardid);\nmsg.cardid = cardid;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 580,
        "wires": [
            [
                "1dbd3ab606fed438"
            ]
        ]
    },
    {
        "id": "3af2fbca19137838",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Build URL Stop Charging",
        "func": "var deviceid = flow.get('deviceid') || msg.deviceid;\nvar userid = flow.get('userid') || msg.userid;\nvar cardid = flow.get('cardid') || msg.cardid;\nvar channelid = flow.get('channelid') || msg.channelid;\n\nvar baseUrl = env.get('url');\nmsg.url = baseUrl + '/api/ajax?requests=%7B%220%22%3A%7B%22handler%22%3A%22%5C%5CLMS%5C%5CEV%5C%5CAsyncServices%5C%5CRechargeSpotsAsyncService%22%2C%22method%22%3A%22action%22%2C%22params%22%3A%7B%22action%22%3A%22StopTransaction%22%2C%22rechargeSpotId%22%3A%22' + deviceid + '%22%2C%22clickedButtonId%22%3A0%2C%22channel%22%3A%22' + channelid + '%22%7D%7D%7D&metricKey=RechargeSpotDashboard_1021';\nmsg.method = \"POST\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 720,
        "wires": [
            [
                "f88bdcf8eaa8e2ce"
            ]
        ]
    },
    {
        "id": "5543a7f6021292f4",
        "type": "switch",
        "z": "afe326f672e3cd97",
        "name": "Check login",
        "property": "headers['Cookie']",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 400,
        "wires": [
            [
                "eeb3b3d597f17754"
            ],
            [
                "48bd18c4860183ee"
            ]
        ]
    },
    {
        "id": "ab42827aa9a16541",
        "type": "switch",
        "z": "afe326f672e3cd97",
        "name": "",
        "property": "50five.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "login",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "poll",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "logout",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 65,
        "y": 380,
        "wires": [
            [
                "eeb3b3d597f17754"
            ],
            [
                "99521c93e3a047aa"
            ],
            [
                "ef08cbdc1a8a6edc"
            ],
            [
                "dadaca9b339cf366"
            ],
            [
                "14976606d8bc1752"
            ],
            [
                "64520b122fb39861"
            ]
        ],
        "l": false
    },
    {
        "id": "829677e378046f06",
        "type": "link in",
        "z": "afe326f672e3cd97",
        "name": "Authenticate",
        "links": [],
        "x": 605,
        "y": 20,
        "wires": [
            [
                "e745a599c9efa2a4",
                "de872fa17c1846e7"
            ]
        ]
    },
    {
        "id": "2ca402a99de11343",
        "type": "comment",
        "z": "afe326f672e3cd97",
        "name": "Authenticate",
        "info": "",
        "x": 510,
        "y": 20,
        "wires": []
    },
    {
        "id": "d66c62a69d3727d4",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Login with Retry",
        "func": "var retries = msg.max_retries || 3;\nvar attempt = msg.attempt || 1;\n\nlet username = msg.username || env.get('username');\nlet password = msg.password || env.get('password');\nvar baseUrl = env.get('url');\nmsg.url = baseUrl + '/Login/Login';\nmsg.headers = {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    \"User-Agent\": \"Mozilla/5.0\",\n    \"Referer\": baseUrl + '/Login/Login'\n};\nmsg.method = \"POST\";\nmsg.payload = `emailField=${encodeURIComponent(username)}`;\nmsg.payload += `&passwordField=${encodeURIComponent(password)}`;\nmsg.attempt = attempt;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 100,
        "wires": [
            [
                "f3fcb42d4b45a567"
            ]
        ]
    },
    {
        "id": "f3fcb42d4b45a567",
        "type": "http request",
        "z": "afe326f672e3cd97",
        "name": "POST Login",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 510,
        "y": 140,
        "wires": [
            [
                "bb7ed68adecb2ca3"
            ]
        ]
    },
    {
        "id": "bb7ed68adecb2ca3",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Check Login Success",
        "func": "// Check for login success by inspecting HTML\nvar cookies = msg.responseCookies || {};\nvar phpsessid = cookies.PHPSESSID ? cookies.PHPSESSID.value : null;\nvar serverid = cookies.SERVERID ? cookies.SERVERID.value : null;\nvar html = msg.payload || '';\n\nmsg.attempt += 1;\n\n// extract dlv_session_user_type and dlv_user_group_name from the results\nvar regex = /_mtm\\.push\\(\\s*{([\\s\\S]*?)}\\s*\\);/g;\nvar match;\nvar found = false;\n\nwhile ((match = regex.exec(html)) !== null) {\n    var objStr = '{' + match[1] + '}';\n    objStr = objStr.replace(/'/g, '\"');\n    objStr = objStr.replace(/,(\\s*[}\\]])/g, '$1');\n    try {\n        var obj = JSON.parse(objStr);\n        if (obj.dlv_session_user_type && obj.dlv_user_group_name) {\n            msg.dlv_session_user_type = obj.dlv_session_user_type;\n            msg.dlv_user_group_name = obj.dlv_user_group_name;\n            found = true;\n            break;\n        }\n    } catch (e) {\n        // Ignore parse errors and continue\n    }\n}\nif (!found) {\n    msg.dlv_session_user_type = null;\n    msg.dlv_user_group_name = null;\n}\n\nif (msg.dlv_session_user_type != 'NotLoggedIn') {\n    if (phpsessid && serverid) {\n        // Success: store cookies\n        flow.set('PHPSESSID', phpsessid);\n        flow.set('SERVERID', serverid);\n        msg.payload = 'Login successful';\n        return [msg, null];\n    } else {\n        msg.errorresult = 'No phpsessid or serverid';\n    }\n} else {\n    msg.errorresult = 'Not Logged In found...';\n}\n\nif (msg.attempt < msg.retries) {\n    // Retry\n    return [null, msg];\n} else {\n    msg.payload = 'Login failed after ' + msg.retries + ' attempts';\n    return [msg, null];\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 180,
        "wires": [
            [
                "670f138e65b086f0",
                "464a08a7930a8b25"
            ],
            [
                "055fefc47e2a9965",
                "0deedfe07fbaeab4"
            ]
        ]
    },
    {
        "id": "055fefc47e2a9965",
        "type": "delay",
        "z": "afe326f672e3cd97",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 180,
        "wires": [
            [
                "d66c62a69d3727d4"
            ]
        ]
    },
    {
        "id": "e745a599c9efa2a4",
        "type": "change",
        "z": "afe326f672e3cd97",
        "name": "Get Username and Password + Max Retries",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "username",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "msg",
                "to": "password",
                "tot": "env"
            },
            {
                "t": "set",
                "p": "max_retries",
                "pt": "msg",
                "to": "3",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 60,
        "wires": [
            [
                "d66c62a69d3727d4"
            ]
        ]
    },
    {
        "id": "ef08cbdc1a8a6edc",
        "type": "link call",
        "z": "afe326f672e3cd97",
        "name": "Get props",
        "links": [
            "76f654c7b3feadba"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 220,
        "y": 720,
        "wires": [
            [
                "3af2fbca19137838"
            ]
        ]
    },
    {
        "id": "76f654c7b3feadba",
        "type": "link in",
        "z": "afe326f672e3cd97",
        "name": "Get props",
        "links": [],
        "x": 175,
        "y": 460,
        "wires": [
            [
                "37207b0ef9a04622",
                "893bf7714f019f15"
            ]
        ]
    },
    {
        "id": "99521c93e3a047aa",
        "type": "link call",
        "z": "afe326f672e3cd97",
        "name": "Get props",
        "links": [
            "76f654c7b3feadba"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 220,
        "y": 680,
        "wires": [
            [
                "166efce0dcca4c03"
            ]
        ]
    },
    {
        "id": "0fa54e940c405816",
        "type": "comment",
        "z": "afe326f672e3cd97",
        "name": "Get props",
        "info": "",
        "x": 220,
        "y": 420,
        "wires": []
    },
    {
        "id": "fda03362ccda5b6d",
        "type": "link out",
        "z": "afe326f672e3cd97",
        "name": "link out 1",
        "mode": "return",
        "links": [],
        "x": 495,
        "y": 620,
        "wires": []
    },
    {
        "id": "670f138e65b086f0",
        "type": "link out",
        "z": "afe326f672e3cd97",
        "name": "link out 2",
        "mode": "return",
        "links": [],
        "x": 695,
        "y": 160,
        "wires": []
    },
    {
        "id": "eeb3b3d597f17754",
        "type": "link call",
        "z": "afe326f672e3cd97",
        "name": "",
        "links": [
            "829677e378046f06"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 430,
        "y": 340,
        "wires": [
            [
                "c9278b4cb8e5f69c"
            ]
        ]
    },
    {
        "id": "c9278b4cb8e5f69c",
        "type": "switch",
        "z": "afe326f672e3cd97",
        "name": "",
        "property": "50five.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "login",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "login",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 535,
        "y": 340,
        "wires": [
            [
                "36fbafc84636541a"
            ],
            [
                "89a8ce5f7b440922"
            ]
        ],
        "l": false
    },
    {
        "id": "89a8ce5f7b440922",
        "type": "switch",
        "z": "afe326f672e3cd97",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Login successful",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Login successful",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 605,
        "y": 340,
        "wires": [
            [
                "aaad9fdb0931a81b"
            ],
            [
                "dd94143ffd519d96",
                "37207b0ef9a04622"
            ]
        ],
        "l": false
    },
    {
        "id": "aaad9fdb0931a81b",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "name": "Login Failed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 320,
        "wires": []
    },
    {
        "id": "5f3853c9602fa364",
        "type": "http request",
        "z": "afe326f672e3cd97",
        "name": "Soft Reset",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 760,
        "wires": [
            [
                "1ef4895ee617902f",
                "8fa98544d309b480"
            ]
        ]
    },
    {
        "id": "648ab0e8980ef93f",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Build URL Soft Reset",
        "func": "var deviceid = flow.get('deviceid') || msg.deviceid;\nvar userid = flow.get('userid') || msg.userid;\nvar cardid = flow.get('cardid') || msg.cardid;\nvar channelid = flow.get('channelid') || msg.channelid;\n\nvar baseUrl = env.get('url');\nmsg.url = baseUrl + '/api/ajax?requests=%7B%220%22%3A%7B%22handler%22%3A%22%5C%5CLMS%5C%5CEV%5C%5CAsyncServices%5C%5CRechargeSpotsAsyncService%22%2C%22method%22%3A%22action%22%2C%22params%22%3A%7B%22action%22%3A%22SoftReset%22%2C%22rechargeSpotId%22%3A%22' + deviceid + '%22%2C%22clickedButtonId%22%3A1%7D%7D%7D&metricKey=RechargeSpotDashboard_1021';\nmsg.method = \"POST\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 760,
        "wires": [
            [
                "5f3853c9602fa364"
            ]
        ]
    },
    {
        "id": "dadaca9b339cf366",
        "type": "link call",
        "z": "afe326f672e3cd97",
        "name": "Get props",
        "links": [
            "76f654c7b3feadba"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 220,
        "y": 760,
        "wires": [
            [
                "648ab0e8980ef93f"
            ]
        ]
    },
    {
        "id": "a82901d77cef174c",
        "type": "http request",
        "z": "afe326f672e3cd97",
        "name": "Get Status",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 840,
        "wires": [
            [
                "ad396f2bbd1d09ee"
            ]
        ]
    },
    {
        "id": "01f05d815d3301eb",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Build URL Get Status",
        "func": "var deviceid = flow.get('deviceid') || msg.deviceid;\nvar userid = flow.get('userid') || msg.userid;\nvar cardid = flow.get('cardid') || msg.cardid;\nvar channelid = flow.get('channelid') || msg.channelid;\n\nvar baseUrl = env.get('url');\nmsg.url = baseUrl + '/api/ajax?requests=%7B%220%22%3A%7B%22handler%22%3A%22%5C%5CLMS%5C%5CEV%5C%5CAsyncServices%5C%5CRechargeSpotsAsyncService%22%2C%22method%22%3A%22overview%22%2C%22params%22%3A%7B%22rechargeSpotId%22%3A%22' + deviceid + '%22%7D%7D%7D&metricKey=RechargeSpotDashboard_149';\nmsg.method = \"POST\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 840,
        "wires": [
            [
                "a82901d77cef174c"
            ]
        ]
    },
    {
        "id": "14976606d8bc1752",
        "type": "link call",
        "z": "afe326f672e3cd97",
        "name": "Get props",
        "links": [
            "76f654c7b3feadba"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 220,
        "y": 840,
        "wires": [
            [
                "01f05d815d3301eb"
            ]
        ]
    },
    {
        "id": "ad396f2bbd1d09ee",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Extract Status",
        "func": "var payload = msg.payload;\n\n// If payload is a string, parse it\nif (typeof payload === \"string\") {\n    payload = JSON.parse(payload);\n    msg.payload = payload;\n}\n\nmsg.connector = payload[0][0].CONNECTOR;\nmsg.status = payload[0][0].NOTIFICATION;\n\nif (payload[0][0].CARDID == \"\") {\n    msg.card_id = \"none\"\n}\nelse {\n    msg.card_id = payload[0][0].CARDID;\n}\nif (payload[0][0].MOM_POWER_KW === null) {\n    msg.power = 0;\n}\nelse {\n    msg.power = parseFloat(payload[0][0].MOM_POWER_KW);\n}\nif (payload[0][0].TRANS_ENERGY_DELIVERED_KWH === null) {\n    msg.energy = 0;\n}\nelse {\n    msg.energy = parseFloat(payload[0][0].TRANS_ENERGY_DELIVERED_KWH);\n}\nif (payload[0][0].TRANSACTION_TIME_H_M === null) {\n    msg.time = 0;\n}\nelse {\n    var time = payload[0][0].TRANSACTION_TIME_H_M;\n    var parts = time.split(':');\n    if (parts.length == 2) {\n        msg.time = parseInt(parts[0]) * 60 + parseInt(parts[1]);\n    }\n    else {\n        msg.time = 0;\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 840,
        "wires": [
            [
                "d149e3c954175a26"
            ]
        ]
    },
    {
        "id": "1ef4895ee617902f",
        "type": "delay",
        "z": "afe326f672e3cd97",
        "name": "",
        "pauseType": "delay",
        "timeout": "7",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 760,
        "wires": [
            [
                "14976606d8bc1752"
            ]
        ]
    },
    {
        "id": "48bd18c4860183ee",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Build URL Device ID",
        "func": "var deviceid = flow.get('deviceid') || msg.deviceid;\nvar userid = flow.get('userid') || msg.userid;\nvar cardid = flow.get('cardid') || msg.cardid;\nvar channelid = flow.get('channelid') || msg.channelid;\n\nvar baseUrl = env.get('url');\nmsg.url = baseUrl + '/api/ajax?requests=%7B%220%22%3A%7B%22handler%22%3A%22%5C%5CLMS%5C%5CEV%5C%5CAsyncServices%5C%5CDashboardAsyncService%22%2C%22method%22%3A%22networkOverview%22%2C%22params%22%3A%7B%22mode%22%3A%22id%22%7D%7D%7D&metricKey=EndUserRechargeSpotListView_99';\nmsg.method = \"POST\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 460,
        "wires": [
            [
                "523e092ea25df902"
            ]
        ]
    },
    {
        "id": "eefc7e230b8abd86",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Build URL Channel ID",
        "func": "var deviceid = flow.get('deviceid') || msg.deviceid;\nvar userid = flow.get('userid') || msg.userid;\nvar cardid = flow.get('cardid') || msg.cardid;\nvar channelid = flow.get('channelid') || msg.channelid;\n\nvar baseUrl = env.get('url');\nmsg.url = baseUrl + '/api/ajax?requests=%7B%220%22%3A%7B%22handler%22%3A%22%5C%5CLMS%5C%5CEV%5C%5CAsyncServices%5C%5CRechargeSpotsAsyncService%22%2C%22method%22%3A%22overview%22%2C%22params%22%3A%7B%22rechargeSpotId%22%3A%22' + deviceid + '%22%7D%7D%7D&metricKey=RechargeSpotDashboard_149';\nmsg.method = \"POST\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 500,
        "wires": [
            [
                "96df4155ded7d3b5"
            ]
        ]
    },
    {
        "id": "76f26faaa6b12c25",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Build URL User ID",
        "func": "var deviceid = flow.get('deviceid') || msg.deviceid;\nvar userid = flow.get('userid') || msg.userid;\nvar cardid = flow.get('cardid') || msg.cardid;\nvar channelid = flow.get('channelid') || msg.channelid;\n\nvar baseUrl = env.get('url');\nmsg.url = baseUrl + '/api/ajax?requests=%7B%220%22%3A%7B%22handler%22%3A%22%5C%5CLMS%5C%5CEV%5C%5CAsyncServices%5C%5CRechargeSpotsAsyncService%22%2C%22method%22%3A%22userAccess%22%2C%22params%22%3A%7B%22rechargeSpotId%22%3A%22' + deviceid + '%22%2C%22input%22%3A%22%22%7D%7D%7D&metricKey=RechargeSpotDashboard_642';\nmsg.method = \"POST\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 540,
        "wires": [
            [
                "34a5d41c70f5ed7f"
            ]
        ]
    },
    {
        "id": "c508ecef01e019d7",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Build URL Card ID",
        "func": "var deviceid = flow.get('deviceid') || msg.deviceid;\nvar userid = flow.get('userid') || msg.userid;\nvar cardid = flow.get('cardid') || msg.cardid;\nvar channelid = flow.get('channelid') || msg.channelid;\n\nvar baseUrl = env.get('url');\nmsg.url = baseUrl + '/api/ajax?requests=%7B%220%22%3A%7B%22handler%22%3A%22%5C%5CLMS%5C%5CEV%5C%5CAsyncServices%5C%5CRechargeSpotsAsyncService%22%2C%22method%22%3A%22cardAccess%22%2C%22params%22%3A%7B%22rechargeSpotId%22%3A%22' + deviceid + '%22%2C%22customerId%22%3A%22' + userid + '%22%7D%7D%7D&metricKey=RechargeSpotDashboard_688';\nmsg.method = \"POST\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 580,
        "wires": [
            [
                "52dc6d748d6d338d"
            ]
        ]
    },
    {
        "id": "64520b122fb39861",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Logout",
        "func": "flow.set('PHPSESSID', '');\nflow.set('SERVERID', '');\n\nmsg.payload = \"Done...\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 900,
        "wires": [
            [
                "48d5a61c52da6f54"
            ]
        ]
    },
    {
        "id": "48d5a61c52da6f54",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "name": "Logged out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 900,
        "wires": []
    },
    {
        "id": "de872fa17c1846e7",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "name": "Auth Begin",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 20,
        "wires": []
    },
    {
        "id": "464a08a7930a8b25",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "name": "Auth Done",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 120,
        "wires": []
    },
    {
        "id": "0deedfe07fbaeab4",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "name": "Auth Retry",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 200,
        "wires": []
    },
    {
        "id": "893bf7714f019f15",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "d": true,
        "name": "Props Begin",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 380,
        "wires": []
    },
    {
        "id": "e095d5d4bde9b040",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "name": "Props Done",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 620,
        "wires": []
    },
    {
        "id": "dd94143ffd519d96",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "name": "Login Success",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 360,
        "wires": []
    },
    {
        "id": "36fbafc84636541a",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "name": "Manual Login",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 280,
        "wires": []
    },
    {
        "id": "e212968823cdeec7",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "name": "Charging Started",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 680,
        "wires": []
    },
    {
        "id": "651b0c71fc1625b4",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "name": "Charging Stopped",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 720,
        "wires": []
    },
    {
        "id": "8fa98544d309b480",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "name": "Reset Done",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 760,
        "wires": []
    },
    {
        "id": "d149e3c954175a26",
        "type": "debug",
        "z": "afe326f672e3cd97",
        "name": "Status Received",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 840,
        "wires": []
    },
    {
        "id": "c2211e7d9f57648c",
        "type": "switch",
        "z": "afe326f672e3cd97",
        "name": "Check output",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "[]",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "[]",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 460,
        "wires": [
            [
                "9d60367871b80759"
            ],
            [
                "026400c8cc57db02"
            ]
        ]
    },
    {
        "id": "9d60367871b80759",
        "type": "function",
        "z": "afe326f672e3cd97",
        "name": "Reset Session IDS",
        "func": "flow.set('PHPSESSID', '');\nflow.set('SERVERID', '');\nmsg.headers['Cookie'] = '';\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 400,
        "wires": [
            [
                "7b18414c2fbadd7d"
            ]
        ]
    },
    {
        "id": "7b18414c2fbadd7d",
        "type": "trigger",
        "z": "afe326f672e3cd97",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1180,
        "y": 400,
        "wires": [
            [
                "eeb3b3d597f17754"
            ]
        ]
    },
    {
        "id": "7801bca7eb84dbaf",
        "type": "tab",
        "label": "50five",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fb419651251e9150",
        "type": "inject",
        "z": "7801bca7eb84dbaf",
        "name": "Login",
        "props": [
            {
                "p": "50five.action",
                "v": "login",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 370,
        "y": 40,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "c1e482c447619238",
        "type": "inject",
        "z": "7801bca7eb84dbaf",
        "name": "Start Charging",
        "props": [
            {
                "p": "50five.action",
                "v": "start",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "0e68820a56fb8fc9",
        "type": "inject",
        "z": "7801bca7eb84dbaf",
        "name": "Stop Charging",
        "props": [
            {
                "p": "50five.action",
                "v": "stop",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "90a2401d152fa35f",
        "type": "inject",
        "z": "7801bca7eb84dbaf",
        "name": "Poll",
        "props": [
            {
                "p": "50five.action",
                "v": "poll",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 480,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "a3770db499d96007",
        "type": "inject",
        "z": "7801bca7eb84dbaf",
        "name": "Reset",
        "props": [
            {
                "p": "50five.action",
                "v": "reset",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 600,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "f697e22eb9f3d098",
        "type": "inject",
        "z": "7801bca7eb84dbaf",
        "name": "Logout",
        "props": [
            {
                "p": "50five.action",
                "v": "logout",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "6ac6eea04cf98b95",
        "type": "mqtt out",
        "z": "7801bca7eb84dbaf",
        "name": "MQTT Output",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "91e30fc5ccf91f78",
        "x": 960,
        "y": 180,
        "wires": []
    },
    {
        "id": "6dab1089e1b0cb2d",
        "type": "change",
        "z": "7801bca7eb84dbaf",
        "name": "Set topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "50five/status",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "status",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 180,
        "wires": [
            [
                "6ac6eea04cf98b95"
            ]
        ]
    },
    {
        "id": "382121f46e1842a5",
        "type": "mqtt in",
        "z": "7801bca7eb84dbaf",
        "name": "MQTT Action",
        "topic": "50five/action",
        "qos": "0",
        "datatype": "utf8",
        "broker": "91e30fc5ccf91f78",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 180,
        "wires": [
            [
                "aae1a1a38b69351f"
            ]
        ]
    },
    {
        "id": "aae1a1a38b69351f",
        "type": "change",
        "z": "7801bca7eb84dbaf",
        "name": "Set payload",
        "rules": [
            {
                "t": "set",
                "p": "50five.action",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 180,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "fccfd7e373f2a50f",
        "type": "subflow:afe326f672e3cd97",
        "z": "7801bca7eb84dbaf",
        "name": "50five (subflow)",
        "env": [
            {
                "name": "password",
                "type": "cred"
            }
        ],
        "x": 580,
        "y": 240,
        "wires": [
            [
                "6dab1089e1b0cb2d",
                "46cb2363cb70d6a5",
                "e9d7987951ce0357",
                "ba78d643128143a7",
                "86def0d3624278b7",
                "1d1128fcab09b37c",
                "f2d13a8802491c42"
            ]
        ]
    },
    {
        "id": "4e842f1ab9749a43",
        "type": "ha-wait-until",
        "z": "7801bca7eb84dbaf",
        "name": "Location",
        "server": "a962aadcdd5cb1ef",
        "version": 3,
        "outputs": 2,
        "entities": {
            "entity": [
                "device_tracker.t_819_xr_device_tracker"
            ],
            "substring": [],
            "regex": []
        },
        "property": "state",
        "comparator": "is",
        "value": "home",
        "valueType": "str",
        "timeout": "10",
        "timeoutType": "num",
        "timeoutUnits": "minutes",
        "checkCurrentState": true,
        "blockInputOverrides": true,
        "outputProperties": [],
        "entityLocation": "data",
        "entityLocationType": "none",
        "x": 540,
        "y": 720,
        "wires": [
            [
                "2281c165366c5695"
            ],
            []
        ]
    },
    {
        "id": "ff52d72b9f227131",
        "type": "server-state-changed",
        "z": "7801bca7eb84dbaf",
        "name": "",
        "server": "a962aadcdd5cb1ef",
        "version": 6,
        "outputs": 2,
        "exposeAsEntityConfig": "",
        "entities": {
            "entity": [
                "sensor.t_819_xr_charge_flap_dc_status"
            ],
            "substring": [],
            "regex": []
        },
        "outputInitially": true,
        "stateType": "num",
        "ifState": "0",
        "ifStateType": "num",
        "ifStateOperator": "is",
        "outputOnlyOnStateChange": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": true,
        "ignorePrevStateUnknown": true,
        "ignorePrevStateUnavailable": true,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "x": 220,
        "y": 720,
        "wires": [
            [
                "4e842f1ab9749a43"
            ],
            []
        ]
    },
    {
        "id": "2281c165366c5695",
        "type": "change",
        "z": "7801bca7eb84dbaf",
        "name": "Start Charging",
        "rules": [
            {
                "t": "set",
                "p": "50five.action",
                "pt": "msg",
                "to": "start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 720,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "98d1459798c9d1c3",
        "type": "server-state-changed",
        "z": "7801bca7eb84dbaf",
        "name": "",
        "server": "a962aadcdd5cb1ef",
        "version": 6,
        "outputs": 2,
        "exposeAsEntityConfig": "",
        "entities": {
            "entity": [
                "sensor.t_819_xr_charging_power"
            ],
            "substring": [],
            "regex": []
        },
        "outputInitially": true,
        "stateType": "num",
        "ifState": "0",
        "ifStateType": "num",
        "ifStateOperator": "gt",
        "outputOnlyOnStateChange": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": true,
        "ignorePrevStateUnknown": true,
        "ignorePrevStateUnavailable": true,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "x": 200,
        "y": 780,
        "wires": [
            [
                "430fb63956da77df"
            ],
            []
        ]
    },
    {
        "id": "430fb63956da77df",
        "type": "ha-wait-until",
        "z": "7801bca7eb84dbaf",
        "name": "Location",
        "server": "a962aadcdd5cb1ef",
        "version": 3,
        "outputs": 2,
        "entities": {
            "entity": [
                "device_tracker.t_819_xr_device_tracker"
            ],
            "substring": [],
            "regex": []
        },
        "property": "state",
        "comparator": "is",
        "value": "home",
        "valueType": "str",
        "timeout": "10",
        "timeoutType": "num",
        "timeoutUnits": "minutes",
        "checkCurrentState": true,
        "blockInputOverrides": true,
        "outputProperties": [],
        "entityLocation": "data",
        "entityLocationType": "none",
        "x": 540,
        "y": 780,
        "wires": [
            [
                "d8697f7a8975c2b3"
            ],
            []
        ]
    },
    {
        "id": "d8697f7a8975c2b3",
        "type": "change",
        "z": "7801bca7eb84dbaf",
        "name": "Start Polling",
        "rules": [
            {
                "t": "set",
                "p": "50five.action",
                "pt": "msg",
                "to": "poll",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 780,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "1dbd3e7cbb974ab7",
        "type": "server-state-changed",
        "z": "7801bca7eb84dbaf",
        "name": "",
        "server": "a962aadcdd5cb1ef",
        "version": 6,
        "outputs": 1,
        "exposeAsEntityConfig": "",
        "entities": {
            "entity": [
                "sensor.50five_status"
            ],
            "substring": [],
            "regex": []
        },
        "outputInitially": false,
        "stateType": "str",
        "ifState": "",
        "ifStateType": "str",
        "ifStateOperator": "is",
        "outputOnlyOnStateChange": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": true,
        "ignorePrevStateUnknown": true,
        "ignorePrevStateUnavailable": true,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "enable",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "x": 160,
        "y": 860,
        "wires": [
            [
                "4f3d840b9954cf3a"
            ]
        ]
    },
    {
        "id": "4f3d840b9954cf3a",
        "type": "trigger",
        "z": "7801bca7eb84dbaf",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 520,
        "y": 860,
        "wires": [
            [
                "86308813ac58a8dd"
            ]
        ]
    },
    {
        "id": "86308813ac58a8dd",
        "type": "change",
        "z": "7801bca7eb84dbaf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enable",
                "pt": "msg",
                "to": "$contains(\"ChargingLadenOccupiedTransactionTransactie voorbereiden\",$.enable)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 860,
        "wires": [
            [
                "af65a2c24aa736f0"
            ]
        ]
    },
    {
        "id": "af65a2c24aa736f0",
        "type": "ha-switch",
        "z": "7801bca7eb84dbaf",
        "name": "50five Charging switch",
        "version": 0,
        "debugenabled": false,
        "inputs": 1,
        "outputs": 2,
        "entityConfig": "b7286b07244e38f8",
        "enableInput": true,
        "outputOnStateChange": true,
        "outputProperties": [
            {
                "property": "50five.action",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "x": 500,
        "y": 920,
        "wires": [
            [
                "fddce25d177b820b"
            ],
            [
                "29674594a4a3f0a1"
            ]
        ]
    },
    {
        "id": "fddce25d177b820b",
        "type": "change",
        "z": "7801bca7eb84dbaf",
        "name": "Start charging",
        "rules": [
            {
                "t": "set",
                "p": "50five.action",
                "pt": "msg",
                "to": "start",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 920,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "09072c96639f898c",
        "type": "change",
        "z": "7801bca7eb84dbaf",
        "name": "Start Polling",
        "rules": [
            {
                "t": "set",
                "p": "50five.action",
                "pt": "msg",
                "to": "poll",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 1080,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "d7732ffb7038ab9f",
        "type": "change",
        "z": "7801bca7eb84dbaf",
        "name": "Stop or reset charging",
        "rules": [
            {
                "t": "change",
                "p": "50five.action",
                "pt": "msg",
                "from": "Laden",
                "fromt": "str",
                "to": "stop",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "50five.action",
                "pt": "msg",
                "from": "Transactie voorbereiden",
                "fromt": "str",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 980,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "29674594a4a3f0a1",
        "type": "api-current-state",
        "z": "7801bca7eb84dbaf",
        "name": "Voorbereiding of Laden",
        "server": "a962aadcdd5cb1ef",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.50five_status",
        "state_type": "str",
        "blockInputOverrides": true,
        "outputProperties": [
            {
                "property": "50five.action",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 490,
        "y": 980,
        "wires": [
            [
                "d7732ffb7038ab9f"
            ]
        ]
    },
    {
        "id": "727e35e240301868",
        "type": "delay",
        "z": "7801bca7eb84dbaf",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 1080,
        "wires": [
            [
                "09072c96639f898c"
            ]
        ]
    },
    {
        "id": "c42a218fc831357c",
        "type": "delay",
        "z": "7801bca7eb84dbaf",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "4",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 1120,
        "wires": [
            [
                "09072c96639f898c"
            ]
        ]
    },
    {
        "id": "10551a808afb423a",
        "type": "poll-state",
        "z": "7801bca7eb84dbaf",
        "name": "Poll every 5 minutes",
        "server": "a962aadcdd5cb1ef",
        "version": 3,
        "exposeAsEntityConfig": "",
        "updateInterval": "5",
        "updateIntervalType": "num",
        "updateIntervalUnits": "minutes",
        "outputInitially": true,
        "outputOnChanged": false,
        "entityId": "sensor.50five_status",
        "stateType": "str",
        "ifState": "$contains(\"LadenGeblokkeerdTransactie voorbereiden\",$entity().state)",
        "ifStateType": "jsonata",
        "ifStateOperator": "jsonata",
        "outputs": 2,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "x": 110,
        "y": 1120,
        "wires": [
            [
                "727e35e240301868"
            ],
            [
                "c42a218fc831357c"
            ]
        ]
    },
    {
        "id": "5aae705f467816d5",
        "type": "poll-state",
        "z": "7801bca7eb84dbaf",
        "name": "Poll every 4 hours",
        "server": "a962aadcdd5cb1ef",
        "version": 3,
        "exposeAsEntityConfig": "",
        "updateInterval": "60",
        "updateIntervalType": "num",
        "updateIntervalUnits": "seconds",
        "outputInitially": true,
        "outputOnChanged": false,
        "entityId": "input_boolean.ha_running",
        "stateType": "habool",
        "ifState": "true",
        "ifStateType": "bool",
        "ifStateOperator": "is",
        "outputs": 2,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "x": 110,
        "y": 1060,
        "wires": [
            [
                "727e35e240301868"
            ],
            []
        ]
    },
    {
        "id": "46cb2363cb70d6a5",
        "type": "ha-sensor",
        "z": "7801bca7eb84dbaf",
        "name": "Laadpaal Power",
        "entityConfig": "5066435a6134f562",
        "version": 0,
        "state": "power",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 820,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "e9d7987951ce0357",
        "type": "ha-sensor",
        "z": "7801bca7eb84dbaf",
        "name": "Laadpaal Status",
        "entityConfig": "0b496c3608a8d29e",
        "version": 0,
        "state": "status",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 820,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "2be6ccce5e41b274",
        "type": "ha-button",
        "z": "7801bca7eb84dbaf",
        "name": "Start",
        "version": 0,
        "debugenabled": false,
        "outputs": 1,
        "entityConfig": "3fd2d0877448559f",
        "outputProperties": [
            {
                "property": "50five.action",
                "propertyType": "msg",
                "value": "start",
                "valueType": "str"
            }
        ],
        "x": 90,
        "y": 280,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "56d5e4180dee01f1",
        "type": "ha-button",
        "z": "7801bca7eb84dbaf",
        "name": "Stop",
        "version": 0,
        "debugenabled": false,
        "outputs": 1,
        "entityConfig": "6566ca32ce67e468",
        "outputProperties": [
            {
                "property": "50five.action",
                "propertyType": "msg",
                "value": "stop",
                "valueType": "str"
            }
        ],
        "x": 90,
        "y": 400,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "cd938daf288780c8",
        "type": "ha-button",
        "z": "7801bca7eb84dbaf",
        "name": "Poll",
        "version": 0,
        "debugenabled": false,
        "outputs": 1,
        "entityConfig": "b430fa7abafaa161",
        "outputProperties": [
            {
                "property": "50five.action",
                "propertyType": "msg",
                "value": "poll",
                "valueType": "str"
            }
        ],
        "x": 90,
        "y": 520,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "c5ca1d656e06625d",
        "type": "ha-button",
        "z": "7801bca7eb84dbaf",
        "name": "Reset",
        "version": 0,
        "debugenabled": false,
        "outputs": 1,
        "entityConfig": "b798943db276a221",
        "outputProperties": [
            {
                "property": "50five.action",
                "propertyType": "msg",
                "value": "reset",
                "valueType": "str"
            }
        ],
        "x": 90,
        "y": 640,
        "wires": [
            [
                "fccfd7e373f2a50f"
            ]
        ]
    },
    {
        "id": "ba78d643128143a7",
        "type": "ha-sensor",
        "z": "7801bca7eb84dbaf",
        "name": "Laadpaal Energy",
        "entityConfig": "7ff0180e82cb7b26",
        "version": 0,
        "state": "energy",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 830,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "86def0d3624278b7",
        "type": "ha-sensor",
        "z": "7801bca7eb84dbaf",
        "name": "Transaction time",
        "entityConfig": "b42a68147137e86c",
        "version": 0,
        "state": "time",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 820,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "1d1128fcab09b37c",
        "type": "ha-sensor",
        "z": "7801bca7eb84dbaf",
        "name": "Laadpaal Connector",
        "entityConfig": "4e3f28e5cdc14525",
        "version": 0,
        "state": "connector",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 840,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "f2d13a8802491c42",
        "type": "ha-sensor",
        "z": "7801bca7eb84dbaf",
        "name": "Laadpaal Card-ID",
        "entityConfig": "2d9ccaa955e12204",
        "version": 0,
        "state": "card_id",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 830,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "91e30fc5ccf91f78",
        "type": "mqtt-broker",
        "name": "",
        "broker": "core-mosquitto",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "a962aadcdd5cb1ef",
        "type": "server",
        "name": "Home Assistant",
        "version": 5,
        "addon": true,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30",
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": ": ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "default",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": false
    },
    {
        "id": "b7286b07244e38f8",
        "type": "ha-entity-config",
        "server": "a962aadcdd5cb1ef",
        "deviceConfig": "8b0d0b1b2ee28c9b",
        "name": "50five Charging switch",
        "version": 6,
        "entityType": "switch",
        "haConfig": [
            {
                "property": "name",
                "value": "50five Charging switch"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": "config"
            },
            {
                "property": "device_class",
                "value": "switch"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "5066435a6134f562",
        "type": "ha-entity-config",
        "server": "a962aadcdd5cb1ef",
        "deviceConfig": "8b0d0b1b2ee28c9b",
        "name": "50five Power",
        "version": 6,
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "50five Power"
            },
            {
                "property": "icon",
                "value": "mdi:flash"
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": "diagnostic"
            },
            {
                "property": "device_class",
                "value": "power"
            },
            {
                "property": "unit_of_measurement",
                "value": "kW"
            },
            {
                "property": "state_class",
                "value": "measurement"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "0b496c3608a8d29e",
        "type": "ha-entity-config",
        "server": "a962aadcdd5cb1ef",
        "deviceConfig": "8b0d0b1b2ee28c9b",
        "name": "50five Status",
        "version": 6,
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "50five Status"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "3fd2d0877448559f",
        "type": "ha-entity-config",
        "server": "a962aadcdd5cb1ef",
        "deviceConfig": "8b0d0b1b2ee28c9b",
        "name": "50five Start",
        "version": 6,
        "entityType": "button",
        "haConfig": [
            {
                "property": "name",
                "value": "50five Start"
            },
            {
                "property": "icon",
                "value": "mdi:play-circle"
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "6566ca32ce67e468",
        "type": "ha-entity-config",
        "server": "a962aadcdd5cb1ef",
        "deviceConfig": "8b0d0b1b2ee28c9b",
        "name": "50five Stop",
        "version": 6,
        "entityType": "button",
        "haConfig": [
            {
                "property": "name",
                "value": "50five Stop"
            },
            {
                "property": "icon",
                "value": "mdi:stop-circle"
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "b430fa7abafaa161",
        "type": "ha-entity-config",
        "server": "a962aadcdd5cb1ef",
        "deviceConfig": "8b0d0b1b2ee28c9b",
        "name": "50five Poll",
        "version": 6,
        "entityType": "button",
        "haConfig": [
            {
                "property": "name",
                "value": "50five Poll"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "b798943db276a221",
        "type": "ha-entity-config",
        "server": "a962aadcdd5cb1ef",
        "deviceConfig": "8b0d0b1b2ee28c9b",
        "name": "50five Reset",
        "version": 6,
        "entityType": "button",
        "haConfig": [
            {
                "property": "name",
                "value": "50five Reset"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "7ff0180e82cb7b26",
        "type": "ha-entity-config",
        "server": "a962aadcdd5cb1ef",
        "deviceConfig": "8b0d0b1b2ee28c9b",
        "name": "50five Energy",
        "version": 6,
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "50five Energy"
            },
            {
                "property": "icon",
                "value": "mdi:lightning-bolt"
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": "diagnostic"
            },
            {
                "property": "device_class",
                "value": "energy"
            },
            {
                "property": "unit_of_measurement",
                "value": "kWh"
            },
            {
                "property": "state_class",
                "value": "total_increasing"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "b42a68147137e86c",
        "type": "ha-entity-config",
        "server": "a962aadcdd5cb1ef",
        "deviceConfig": "8b0d0b1b2ee28c9b",
        "name": "50five Transaction time",
        "version": 6,
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "50five Transaction time"
            },
            {
                "property": "icon",
                "value": "mdi:timer"
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": "diagnostic"
            },
            {
                "property": "device_class",
                "value": "duration"
            },
            {
                "property": "unit_of_measurement",
                "value": "min"
            },
            {
                "property": "state_class",
                "value": "measurement"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "4e3f28e5cdc14525",
        "type": "ha-entity-config",
        "server": "a962aadcdd5cb1ef",
        "deviceConfig": "8b0d0b1b2ee28c9b",
        "name": "50five Connector",
        "version": 6,
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "50five Connector"
            },
            {
                "property": "icon",
                "value": "mdi:connection"
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "2d9ccaa955e12204",
        "type": "ha-entity-config",
        "server": "a962aadcdd5cb1ef",
        "deviceConfig": "8b0d0b1b2ee28c9b",
        "name": "50five Card-ID",
        "version": 6,
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "50five Card-ID"
            },
            {
                "property": "icon",
                "value": "mdi:card-bulleted"
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "8b0d0b1b2ee28c9b",
        "type": "ha-device-config",
        "name": "Laadpaal",
        "hwVersion": "",
        "manufacturer": "Node-RED",
        "model": "",
        "swVersion": ""
    }
]